syntax = "proto3";
package sdk.avail.v1beta1;

import "cosmos/msg/v1/msg.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/vitwit/avail-da-module/types";

// Msg defines the Msg service for avail da module
service Msg {
  option (cosmos.msg.v1.service) = true;

  // SetAvailAddress
  rpc SetAvailAddress(MsgSetAvailAddress) returns (MsgSetAvailAddressResponse);  // TODO: deprecate

  // Submits a blob for a specified range of blocks.
  rpc SubmitBlob(MsgSubmitBlobRequest) returns (MsgSubmitBlobResponse);

  // UpdateBlobStatus updates the status of a blob submission.
  rpc UpdateBlobStatus(MsgUpdateBlobStatusRequest) returns (MsgUpdateBlobStatusResponse);
}

// MsgSetAvailAddress defines a SDK message for validators to set their Avail address
message MsgSetAvailAddress {
  option (cosmos.msg.v1.signer) = "validator_address";

  string validator_address = 1;

  string avail_address = 2;
}

// MsgSetAvailAddressResponse is the response type for the Msg/SetAvailAddress RPC method.
message MsgSetAvailAddressResponse {}

// MsgSetAvailAddress defines a message to submit a blob containing data for a specified range of blocks.
message MsgSubmitBlobRequest {
  option (cosmos.msg.v1.signer) = "validator_address";

  // Address of the validator submitting the blob. This field identifies the validator responsible for the blob submission.
  string validator_address = 1;

  // The range of blocks for which the blob is being submitted.
  Range blocks_range = 2;
}

// Range defines the range of blocks for which the blob is being submitted.
message Range {

  // The starting block height in the range. Indicates the beginning of the block range.
  uint64 from = 1;

  // The ending block height in the range. Indicates the end of the block range.
  uint64 to = 2;
}

// MsgSubmitBlobResponse is the response type for the Msg/SubmitBlob RPC method.
message MsgSubmitBlobResponse {}

// MsgUpdateBlobStatusRequest define a message to update the status of a previously submitted blob.
message MsgUpdateBlobStatusRequest {
  option (cosmos.msg.v1.signer) = "validator_address";

  // Address of the validator updating the blob status.
  string validator_address = 1;

  // range of blocks for which the blob status is being updated.
  Range blocks_range = 2;

  // The height at which the blob is stored in the Avail system. This indicates where the blob data is available.
  uint64 avail_height = 3; 

  // The status of the blob submission.
  bool is_success = 4;

}

// BlobStatus defines the statuses for a blob submission
enum BlobStatus {
  option (gogoproto.goproto_enum_prefix) = false;

  // Indicates that the blob status is unspecified or not set.
  BLOB_STATUS_UNSPECIFIED = 0;

  // Indicates that the blob submission failed.
  BLOB_STATUS_FAILURE = 1;

  // Indicates that the blob submission was successful.
  BLOB_STATUS_SUCCESS = 2;

  // Indicates that the blob submission is still pending and has not yet been processed.
  BLOB_STATUS_PENDING = 3;
  
}

// MsgUpdateBlobStatusResponse is the response type for the Msg/UpdateBlobStatus RPC method.
message MsgUpdateBlobStatusResponse {
}