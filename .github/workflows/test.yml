# name: Tests

# on: 
#   pull_request:
#   push:
#     branches:
#       - main

# concurrency:
#   group: ci-${{ github.ref }}-tests
#   cancel-in-progress: true

# jobs:
#   tests:
#     name: Tests and code coverage
#     runs-on: ubuntu-latest
#     steps:
#       - name: Install GO
#         uses: actions/setup-go@v3
#         with:
#           go-version: "1.22"
#       - name: Checkout code
#         uses: actions/checkout@v3
#       - id: get_diff
#         uses: technote-space/get-diff-action@v6.1.2
#         with:
#           PATTERNS: |
#             **/**.go
#             go.mod
#             go.sum
#       - name: run all tests and generate coverage
#         run: go test -v -mod=readonly -timeout 30m -coverprofile=coverage.txt -tags='norace' -covermode=atomic `go list ./... | grep -v simapp`
#         if: steps.get_diff.outputs.changed == 'true'
#       - name: Upload codecov report
#         uses: codecov/codecov-action@v3.1.0
#         with:
#           file: coverage.txt
#         if: steps.get_diff.outputs.changed == 'true'

name: Run Go Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: '1.22' # Specify the Go version you want to use

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Install dependencies
      run: go mod tidy

    - name: Run tests
      run: |
        go test -v ./... || { echo 'Tests failed'; exit 1; }

    - name: Upload test results
      if: failure() # Upload test results only if tests fail
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: |
          $(find . -name '*_test.go' -o -name '*.log')
